'use client'; import { useState, useEffect } from 'react'; export default function Home() { const [query, setQuery] = useState(''); const [engine, setEngine] = useState('google'); const [category, setCategory] = useState('web'); const [subCategory, setSubCategory] = useState(''); const [history, setHistory] = useState([]); const [theme, setTheme] = useState('dark'); const subCategories = { web: ["Tümü", "Bilim", "Sanat", "Teknoloji", "Sağlık"], science: ["Fizik", "Kimya", "Biyoloji", "Astronomi"], tech: ["AI", "Bilgisayar", "Mobil", "Oyun"] }; useEffect(() => { const saved = localStorage.getItem('searchHistory'); if (saved) setHistory(JSON.parse(saved)); document.documentElement.classList.toggle('dark', theme === 'dark'); }, [theme]); const handleSearch = () => { if (!query.trim()) return; let q = query; let eng = engine; let cat = category; // Komut kontrolü if (query.startsWith('/')) { const parts = query.split(' '); const cmd = parts[0].substring(1); q = parts.slice(1).join(' '); if (cmd === 'g') eng = 'google'; else if (cmd === 'd') eng = 'duckduckgo'; else if (cmd === 'b') eng = 'bing'; else if (cmd === 'y') eng = 'yahoo'; else if (cmd === 'yd') eng = 'yandex'; setQuery(q); setEngine(eng); } let searchUrl = ''; if (eng === 'google') { if (cat === 'images') { searchUrl = `https://www.google.com/search?tbm=isch&q=${encodeURIComponent(q)}`; } else if (cat === 'videos') { searchUrl = `https://www.google.com/search?tbm=vid&q=${encodeURIComponent(q)}`; } else if (cat === 'news') { searchUrl = `https://news.google.com/search?q=${encodeURIComponent(q)}`; } else if (cat === 'maps') { searchUrl = `https://www.google.com/maps/search/${encodeURIComponent(q)}`; } else if (cat === 'science') { searchUrl = `https://scholar.google.com/scholar?q=${encodeURIComponent(q)}`; } else if (cat === 'tech') { searchUrl = `https://www.google.com/search?q=${encodeURIComponent(q)}+technology`; } else { searchUrl = `https://www.google.com/search?q=${encodeURIComponent(q)}`; } } else if (eng === 'duckduckgo') { if (cat === 'images') { searchUrl = `https://duckduckgo.com/?q=${encodeURIComponent(q)}&iax=images&ia=images`; } else if (cat === 'videos') { searchUrl = `https://duckduckgo.com/?q=${encodeURIComponent(q)}&iax=videos&ia=videos`; } else if (cat === 'news') { searchUrl = `https://duckduckgo.com/?q=${encodeURIComponent(q)}&iar=news&ia=news`; } else { searchUrl = `https://duckduckgo.com/?q=${encodeURIComponent(q)}`; } } else if (eng === 'bing') { if (cat === 'images') { searchUrl = `https://www.bing.com/images/search?q=${encodeURIComponent(q)}`; } else if (cat === 'videos') { searchUrl = `https://www.bing.com/videos/search?q=${encodeURIComponent(q)}`; } else if (cat === 'news') { searchUrl = `https://www.bing.com/news/search?q=${encodeURIComponent(q)}`; } else if (cat === 'maps') { searchUrl = `https://www.bing.com/maps/search?where1=${encodeURIComponent(q)}`; } else { searchUrl = `https://www.bing.com/search?q=${encodeURIComponent(q)}`; } } else if (eng === 'yahoo') { searchUrl = `https://search.yahoo.com/search?p=${encodeURIComponent(q)}`; } else if (eng === 'yandex') { searchUrl = `https://yandex.com/search/?text=${encodeURIComponent(q)}`; } // Yeni sekmede aç window.open(searchUrl, '_blank'); // Geçmişi güncelle const newHistory = [{ query: q, engine: eng, category: cat }, ...history].slice(0, 10); setHistory(newHistory); localStorage.setItem('searchHistory', JSON.stringify(newHistory)); }; const handleKeyDown = (e) => { if ((e.ctrlKey || e.metaKey) && e.key === 'k') { e.preventDefault(); document.getElementById('query')?.focus(); } }; useEffect(() => { document.addEventListener('keydown', handleKeyDown); return () => document.removeEventListener('keydown', handleKeyDown); }, []); return ( <div className="min-h-screen bg-gradient-to-br from-gray-900 to-black text-white p-6"> <div className="max-w-4xl mx-auto"> <div className="flex justify-between items-center mb-10"> <h1 className="text-5xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cosmic-primary to-cosmic-secondary"> Cosmic Search Pro </h1> <div className="flex gap-3"> <button onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')} className="p-2 rounded-full bg-gray-800 hover:bg-gray-700" > {theme === 'dark' ? '☀️' : '🌙'} </button> </div> </div> <div className="mb-10"> <input id="query" type="text" value={query} onChange={(e) => setQuery(e.target.value)} placeholder="Galaksilerde ne arıyorsun?..." className="w-full p-5 rounded-full bg-gray-800 border border-gray-700 text-xl focus:outline-none focus:ring-2 focus:ring-cosmic-primary" onKeyDown={(e) => e.key === 'Enter' && handleSearch()} /> <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mt-5"> <select value={engine} onChange={(e) => setEngine(e.target.value)} className="p-3 rounded-lg bg-gray-800 border border-gray-700" > <option value="google">🔍 Google</option> <option value="duckduckgo">🦆 DuckDuckGo</option> <option value="bing">🪟 Bing</option> <option value="yahoo">.yahoo</option> <option value="yandex">Yandex</option> </select> <select value={category} onChange={(e) => setCategory(e.target.value)} className="p-3 rounded-lg bg-gray-800 border border-gray-700" > <option value="web">🌐 Web</option> <option value="images">🖼️ Fotoğraflar</option> <option value="videos">🎥 Videolar</option> <option value="news">📰 Haberler</option> <option value="maps">🗺️ Haritalar</option> <option value="science">🔬 Bilim</option> <option value="tech">💻 Teknoloji</option> </select> {subCategories[category] && ( <select value={subCategory} onChange={(e) => setSubCategory(e.target.value)} className="p-3 rounded-lg bg-gray-800 border border-gray-700" > {subCategories[category].map((opt, i) => ( <option key={i} value={opt}>{opt}</option> ))} </select> )} </div> <button onClick={handleSearch} className="mt-5 w-full py-4 bg-gradient-to-r from-cosmic-primary to-cosmic-secondary rounded-full font-bold text-lg hover:opacity-90 transition" > Ara </button> </div> <div className="mb-10"> <h3 className="text-xl font-bold text-cosmic-primary mb-3">Geçmiş Aramalar</h3> <div className="flex flex-wrap gap-2"> {history.map((item, index) => ( <button key={index} onClick={() => { setQuery(item.query); setEngine(item.engine); setCategory(item.category); }} className="px-4 py-2 bg-gray-800 rounded-full hover:bg-gray-700" > {item.query} </button> ))} </div> </div> <footer className="text-center text-gray-500 text-sm"> &copy; 2025 Cosmic Search | Sunucusuz & Futuristik </footer> </div> </div> ); }
